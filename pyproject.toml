[build-system]
requires = [
    "setuptools>=42",
    "wheel",
    "setuptools_scm[toml]>=3.4",
    "setuptools_scm_git_archive",
]

[project]
name = "cmor-check"
description = "cmor checker"
readme = "README.md"
keywords = ["cmip", "cmor"]
requires-python = ">=3.8"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
  "numpy",
  "xarray",
  "click",
]
dynamic = ["version"]

entry-points."compliance_checker.suites"."cmor" = "cmor_check.cc_plugin:CMOR_1_Check"

[project.scripts]
cmor-check = "cmor_check.cli:check"

[tool.setuptools]
packages = ["cmor_check"]

[tool.setuptools_scm]
fallback_version = "999"
version_scheme = "no-guess-dev"

[tool.ruff]
target-version = "py39"
builtins = ["ellipsis"]
exclude = [
    ".eggs",
    "doc",
]

[lint]
# E402: module level import not at top of file
# E501: line too long - let black worry about that
# E731: do not assign a lambda expression, use a def
ignore = [
    "E402",
    "E501",
    "E731",
]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I",
    # Pyupgrade
    "UP",
]

[tool.pytest]
python_files = "test_*.py"
testpaths = ["cmor_check/tests"]

[tool.rstcheck]
report_level = "WARNING"
ignore_roles = [
    "pull",
    "issue",
]
ignore_directives = [
    "ipython",
    "autodata",
    "autosummary",
]
